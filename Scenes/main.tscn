[gd_scene load_steps=13 format=4 uid="uid://bs7fac4gqq38d"]

[ext_resource type="Script" uid="uid://cimcohihg0ya2" path="res://Manager/GameManager.cs" id="1_kry3j"]
[ext_resource type="PackedScene" uid="uid://bx4os13hcq6ew" path="res://Others/FollowCamera.tscn" id="2_21xkr"]
[ext_resource type="PackedScene" uid="uid://cf716bjk3sjh6" path="res://Entities/Player/player.tscn" id="3_6bp64"]
[ext_resource type="PackedScene" uid="uid://cw1l3g7lrqlhq" path="res://UI/control.tscn" id="4_344ge"]
[ext_resource type="PackedScene" uid="uid://btebxwdonw7tr" path="res://Entities/Consumables/moving_entity.tscn" id="5_ynf5e"]

[sub_resource type="ProceduralSkyMaterial" id="ProceduralSkyMaterial_lquwl"]
sky_horizon_color = Color(0.662243, 0.671743, 0.686743, 1)
ground_horizon_color = Color(0.662243, 0.671743, 0.686743, 1)

[sub_resource type="Sky" id="Sky_7mycd"]
sky_material = SubResource("ProceduralSkyMaterial_lquwl")

[sub_resource type="Environment" id="Environment_272bh"]
background_mode = 1
background_color = Color(0.44407, 0.496852, 0.58599, 1)
sky = SubResource("Sky_7mycd")
ambient_light_source = 2
ambient_light_color = Color(0.240605, 0.415114, 0.499959, 1)
tonemap_mode = 2
ssao_enabled = true
ssao_intensity = 5.44
ssao_power = 1.72305
ssao_horizon = 1.0
ssao_sharpness = 0.65
glow_enabled = true

[sub_resource type="NavigationMesh" id="NavigationMesh_lquwl"]
vertices = PackedVector3Array(192, 0.663073, -94, 192, 0.663073, -88, 196, 0.663073, -89, 196, 0.663073, -105, -211, 0.663073, -91, -207, 0.663073, -90, -206, 0.663073, -97, -211, 0.663073, -105, 188, 0.663073, -97, -205, 6.66307, 119, -203, 6.66307, 119, -202, 6.66307, 116, -202, 6.66307, 113, -203, 6.66307, -91, -205, 6.66307, -95, 186, 6.66307, 116, 187, 6.66307, 119, 189, 6.66307, 119, 187, 6.66307, 112, 187, 6.66307, -95, 186, 6.66307, -92, 189, 6.66307, -93, 192, 0.663073, 120, 196, 0.663073, 124, 186, 0.663073, 122, 185, 0.663073, 118, -200, 0.663073, 118, -202, 0.663073, 122, 190, 0.663073, 122, -206, 0.663073, 122, -211, 0.663073, 124, -152, 0.663073, -61, -144, 0.663073, -62, -144, 0.663073, -90, -200, 0.663073, -50, -152, 0.663073, -50, -200, 0.663073, -90, -72, 0.663073, -19, -71, 0.663073, -17, -55, 0.663073, -25, -64, 0.663073, -39, -136, 0.663073, -61, -136, 0.663073, -49, -85, 0.663073, -19, -64, 0.863071, -42, -65.6, 0.663073, -37.4, -48, 0.663073, -90, -62.2222, 0.663073, -47.3333, -48, 0.663073, -50, -58.6667, 0.663073, -44.6667, -46, 0.663073, -47, -32, 0.663073, -41, 70, 0.663073, -40, 78, 0.663073, -40, 78, 0.663073, -90, -30, 0.663073, -39, -31, 0.663073, -34, 69, 0.663073, -34, 117, 0.663073, -74, 122, 0.663073, -76, 122, 0.663073, -90, 107, 0.663073, -65, 85, 0.663073, -38, 110, 0.663073, -56, 108, 0.663073, -57, 84, 0.663073, -40, 141, 0.663073, -53, 146, 0.663073, -51, 147, 0.663073, -53, 142, 0.663073, -56, 131, 0.663073, -73, 136, 0.663073, -69, 161, 0.663073, -53, 185, 0.663073, -46, 185, 0.663073, -90, 125, 0.663073, -75, 125, 0.663073, -72, 162, 0.663073, -46, 124, 10.7631, -72, 121, 11.1631, -72, 122, 10.5631, -69, 125, 9.66307, -67, 110, 12.5631, -70, 111, 9.86307, -57, 111, 12.2631, -68, 110.667, 10.7631, -61.3333, 114, 9.46307, -57, 114, 10.7631, -63, 114, 10.1631, -60, 121, 11.1631, -71, 115, 11.9631, -71, 118.5, 11.1631, -70, 126, 6.16307, -70, 127, 6.16307, -68, 131, 6.16307, -70, 116, 6.16307, -69, 116, 6.16307, -63, 124, 6.16307, -67, 123, 6.16307, -70, 117, 0.863071, -68, 117, 0.663073, -64, 123, 0.663073, -66, 123, 0.663073, -69, 121, 13.1631, -47, 140, 13.1631, -55, 134, 13.1631, -69, 115, 13.1631, -61, 131, 0.663073, -64, 129, 0.663073, -66, 127, 0.663073, -65, 127, 0.663073, -60, 131, 0.663073, -59, 123, 0.663073, -59, 132, 6.16307, -65, 129, 6.16307, -66, 127, 6.16307, -65, 128, 6.16307, -59, 133, 6.16307, -58, 125, 6.16307, -58, 111, 0.863071, -63, 111, 0.663073, -60, 114, 0.663073, -62, 114, 0.763071, -65, 117, 9.56307, -60, 117, 9.16307, -58, 120, 8.66307, -58, 120, 9.06307, -60, 126, 8.86307, -64, 126, 7.86307, -59, 123, 8.16307, -59.5, 138, 0.663073, -55, 134, 0.663073, -64, 134, 0.663073, -56, 119, 0.663073, -54, 121, 0.663073, -49, 125, 0.663073, -49, 118, 6.16307, -61, 125, 6.16307, -61, 122, 6.16307, -63, -150, 10.1631, -60, -150, 10.1631, -50, -138, 10.1631, -50, -138, 10.1631, -60, -149, 0.663073, -59, -149, 0.663073, -51, -139, 0.663073, -51, -139, 0.663073, -59, 120, 0.663073, -45, 115, 0.663073, -57, 147, 0.663073, -39, 161, 0.663073, -39, 185, 0.663073, 20, 85, 0.663073, -27, 74, 0.663073, 13, 82, 0.663073, 20, 75, 0.663073, -26, 148, 10.1631, -51, 148, 10.1631, -41, 160, 10.1631, -41, 160, 10.1631, -51, -150, 0.663073, -48, -183, 0.663073, 13, -180, 0.663073, 16, -200, 0.663073, 23, 149, 0.663073, -50, 149, 0.663073, -42, 159, 0.663073, -42, 159, 0.663073, -50, -99, 0.663073, 10, -97, 0.663073, 13, -85, 0.663073, -5, -87, 0.663073, -6, -87, 0.663073, -18, -103, 0.663073, 10, -138, 0.663073, -48, -115, 0.663073, 14, -116, 0.663073, 16, -126, 0.663073, 27, -115, 0.663073, 20, -172, 0.663073, 29, -51, 0.663073, -25, -49, 0.663073, -28, -52, 0.663073, -29, -51, 0.663073, -41, -48, 0.663073, -43, -49, 0.663073, -46, -61, 0.663073, -41, -52, 0.663073, -37, -42, 0.663073, -42, -37, 0.663073, -31, -33, 0.663073, -37, -45, 0.663073, -38, -45, 0.663073, -35, -42, 0.663073, -34, 71, 10.1631, -38, 71, 10.1631, -28, 83, 10.1631, -28, 83, 10.1631, -38, 72, 0.663073, -37, 72, 0.663073, -29, 82, 0.663073, -29, 82, 0.663073, -37, -19, 0.763071, 56, -22, 0.663073, 61, -17, 0.663073, 64, 19, 0.663073, 77, -16, 0.663073, 54, 64, 0.663073, 25, 69, 0.663073, -27, -34, 0.663073, -29, -19, 0.663073, 51, 36, 0.663073, 68, -47, 0.663073, -28, -44, 0.663073, -31, -47, 0.663073, -32, -49, 0.663073, -29, -36, 0.663073, -27, -41, 0.763071, -30, -51, 0.663073, -21, -71, 0.663073, -7, -22, 0.663073, 53, -85, 10.1631, -17, -85, 10.1631, -7, -73, 10.1631, -7, -73, 10.1631, -17, -84, 0.663073, -16, -84, 0.663073, -8, -74, 0.663073, -8, -74, 0.663073, -16, -94, 0.663073, 28, -97, 0.663073, 29, -95, 0.663073, 34, -27, 0.663073, 58, -72, 0.663073, -5, -93, 0.663073, 25, -101, 0.663073, 17, -99, 0.663073, 19, -101, 0.863071, 13, -109, 0.663073, 19, -112, 0.663073, 17, -182, 10.1631, 22, -178, 10.1631, 24, -182, 10.1631, 15, -173, 10.1631, 31, -174, 10.1631, 33, -170, 10.1631, 40, -167, 10.1631, 43, -199, 10.1631, 25, -193, 10.1631, 29, -182, 10.1631, 47, -184, 10.1631, 52, -190, 10.1631, 36, 66, 10.1631, 23, 72, 10.1631, 31, 82, 10.1631, 23, 74, 10.1631, 15, 68, 0.663073, 23, 72, 0.663073, 29, 80, 0.663073, 23, 74, 0.663073, 17, -169, 0.663073, 43, -169, 0.663073, 40, -171, 0.663073, 40, -183, 0.663073, 47, -184, 0.663073, 50, -197, 0.663073, 25, -190, 0.663073, 36, -193, 0.663073, 29, -180, 0.663073, 22, -182, 0.663073, 18, 150, 0.663073, 76, 151, 0.663073, 78, 185, 0.663073, 78, 84, 0.663073, 22, 137, 0.663073, 76, 82, 0.663073, 25, -104, 0.863071, 27, -101, 0.663073, 27, -102, 0.663073, 21, -106, 0.663073, 22, -109, 0.763071, 29, -107, 0.663073, 29, -108, 0.663073, 24, -110, 0.663073, 23, -183, 17.1631, 44, -172, 17.1631, 39, -180, 17.1631, 24, -191, 17.1631, 29, -113, 0.663073, 43, -104, 0.663073, 39, -113, 0.663073, 38, -122, 0.663073, 27, -115, 0.763071, 24, 45, 0.663073, 84, 43, 0.663073, 85, 43, 1.76307, 93, 49, 2.56307, 92, 48, 0.763071, 83, 72, 0.663073, 33, 50, 0.663073, 84, 52, 0.663073, 92, 135, 0.663073, 89, 135, 0.663073, 77, 45, 0.663073, 81, 45, 0.663073, 95, 45, 0.663073, 111, 143, 0.663073, 111, 143, 0.663073, 90, -182, 0.663073, 43, -174, 0.663073, 39, -181, 0.663073, 26, -189, 0.663073, 30, -182, 10.1631, 43, -174, 10.1631, 39, -181, 10.1631, 26, -189, 10.1631, 30, -165, 0.663073, 42, -119, 0.663073, 40, -124, 0.663073, 111, -124, 0.663073, 85, -132, 0.663073, 84, -132, 0.663073, 73, -167, 0.663073, 45, -184, 0.663073, 54, -200, 0.663073, 28, -200, 0.663073, 111, -110, 0.663073, 36, -103, 0.663073, 34, -104, 0.663073, 31, -111, 0.663073, 32, -29, 0.763071, 60, -99, 0.663073, 39, -116, 0.663073, 84, -113, 0.663073, 47, -116, 0.663073, 72, -23, 0.663073, 111, -23, 0.663073, 69, -26, 0.663073, 67, -131, 0.663073, 71, 37, 0.663073, 97, 38, 1.06307, 94, 29, 0.663073, 93, 25, 0.663073, 95, 33.5, 0.663073, 93.5, 16, 0.663073, 81, 33, 3.16307, 84, 43, 3.16307, 84, 41, 3.16307, 77, 36, 3.16307, 70, 25, 3.16307, 93, 31, 3.16307, 90, 18, 3.16307, 79, 26, 0.663073, 91, 30, 0.663073, 90, 32, 0.663073, 85, 20, 0.663073, 80, 33, 0.663073, 72, 42, 0.663073, 83, 36, 0.663073, 72, -130, 10.1631, 73, -130, 10.1631, 83, -118, 10.1631, 83, -118, 10.1631, 73, -129, 0.663073, 74, -129, 0.663073, 82, -119, 0.663073, 82, -119, 0.663073, 74, 137, 10.1631, 78, 137, 10.1631, 88, 149, 10.1631, 88, 149, 10.1631, 78, 151, 0.663073, 89, 185, 0.663073, 111, 138, 0.663073, 79, 138, 0.663073, 87, 148, 0.663073, 87, 148, 0.663073, 79, 37, -0.936929, 85, 40, -0.936929, 82, 37, -1.53693, 81, 32, -2.03693, 83, 33, -1.53693, 85, 36, 0.663073, 89, 36, 0.663073, 91, 41, 0.763071, 90)
polygons = [PackedInt32Array(1, 0, 2), PackedInt32Array(2, 0, 3), PackedInt32Array(5, 4, 6), PackedInt32Array(6, 4, 7), PackedInt32Array(6, 7, 8), PackedInt32Array(8, 7, 3), PackedInt32Array(3, 0, 8), PackedInt32Array(10, 9, 11), PackedInt32Array(11, 9, 12), PackedInt32Array(12, 9, 13), PackedInt32Array(13, 9, 14), PackedInt32Array(16, 15, 17), PackedInt32Array(17, 15, 18), PackedInt32Array(11, 12, 15), PackedInt32Array(15, 12, 18), PackedInt32Array(19, 21, 20), PackedInt32Array(20, 21, 18), PackedInt32Array(18, 21, 17), PackedInt32Array(20, 13, 19), PackedInt32Array(19, 13, 14), PackedInt32Array(1, 2, 22), PackedInt32Array(22, 2, 23), PackedInt32Array(25, 24, 26), PackedInt32Array(26, 24, 27), PackedInt32Array(23, 28, 22), PackedInt32Array(24, 28, 23), PackedInt32Array(5, 29, 4), PackedInt32Array(4, 29, 30), PackedInt32Array(27, 24, 30), PackedInt32Array(30, 24, 23), PackedInt32Array(30, 29, 27), PackedInt32Array(33, 32, 31), PackedInt32Array(31, 35, 34), PackedInt32Array(33, 31, 36), PackedInt32Array(36, 31, 34), PackedInt32Array(38, 37, 39), PackedInt32Array(39, 37, 40), PackedInt32Array(43, 42, 41), PackedInt32Array(44, 40, 45), PackedInt32Array(45, 40, 37), PackedInt32Array(41, 32, 33), PackedInt32Array(44, 45, 47), PackedInt32Array(47, 45, 37), PackedInt32Array(47, 37, 43), PackedInt32Array(47, 43, 46), PackedInt32Array(46, 43, 41), PackedInt32Array(46, 41, 33), PackedInt32Array(44, 47, 49), PackedInt32Array(49, 47, 48), PackedInt32Array(48, 47, 46), PackedInt32Array(50, 48, 51), PackedInt32Array(51, 48, 46), PackedInt32Array(54, 53, 52), PackedInt32Array(57, 56, 55), PackedInt32Array(51, 46, 55), PackedInt32Array(55, 46, 57), PackedInt32Array(57, 46, 52), PackedInt32Array(52, 46, 54), PackedInt32Array(58, 60, 59), PackedInt32Array(61, 60, 58), PackedInt32Array(65, 64, 62), PackedInt32Array(62, 64, 63), PackedInt32Array(65, 53, 61), PackedInt32Array(61, 53, 54), PackedInt32Array(61, 54, 60), PackedInt32Array(61, 64, 65), PackedInt32Array(67, 66, 68), PackedInt32Array(68, 66, 69), PackedInt32Array(70, 60, 71), PackedInt32Array(71, 60, 72), PackedInt32Array(72, 60, 73), PackedInt32Array(73, 60, 74), PackedInt32Array(70, 76, 75), PackedInt32Array(75, 59, 60), PackedInt32Array(68, 69, 72), PackedInt32Array(72, 69, 71), PackedInt32Array(60, 70, 75), PackedInt32Array(73, 77, 72), PackedInt32Array(79, 78, 80), PackedInt32Array(80, 78, 81), PackedInt32Array(82, 84, 85), PackedInt32Array(85, 84, 83), PackedInt32Array(86, 83, 88), PackedInt32Array(88, 83, 87), PackedInt32Array(87, 83, 84), PackedInt32Array(80, 91, 89), PackedInt32Array(89, 91, 90), PackedInt32Array(80, 81, 91), PackedInt32Array(91, 81, 90), PackedInt32Array(90, 81, 84), PackedInt32Array(84, 81, 87), PackedInt32Array(94, 93, 92), PackedInt32Array(98, 97, 95), PackedInt32Array(95, 97, 96), PackedInt32Array(102, 101, 99), PackedInt32Array(99, 101, 100), PackedInt32Array(106, 105, 103), PackedInt32Array(103, 105, 104), PackedInt32Array(108, 107, 109), PackedInt32Array(109, 107, 110), PackedInt32Array(110, 107, 111), PackedInt32Array(111, 112, 110), PackedInt32Array(114, 113, 115), PackedInt32Array(115, 113, 116), PackedInt32Array(116, 113, 117), PackedInt32Array(117, 118, 116), PackedInt32Array(122, 121, 119), PackedInt32Array(119, 121, 120), PackedInt32Array(126, 125, 123), PackedInt32Array(123, 125, 124), PackedInt32Array(127, 126, 123), PackedInt32Array(128, 129, 127), PackedInt32Array(127, 129, 126), PackedInt32Array(132, 131, 130), PackedInt32Array(134, 133, 135), PackedInt32Array(135, 133, 132), PackedInt32Array(135, 132, 130), PackedInt32Array(136, 138, 137), PackedInt32Array(142, 141, 139), PackedInt32Array(139, 141, 140), PackedInt32Array(146, 145, 143), PackedInt32Array(143, 145, 144), PackedInt32Array(148, 147, 63), PackedInt32Array(63, 147, 62), PackedInt32Array(67, 149, 66), PackedInt32Array(66, 149, 147), PackedInt32Array(77, 73, 150), PackedInt32Array(150, 73, 151), PackedInt32Array(153, 152, 154), PackedInt32Array(154, 152, 149), PackedInt32Array(154, 149, 150), PackedInt32Array(154, 150, 151), PackedInt32Array(155, 152, 153), PackedInt32Array(62, 147, 152), PackedInt32Array(152, 147, 149), PackedInt32Array(159, 158, 156), PackedInt32Array(156, 158, 157), PackedInt32Array(35, 160, 34), PackedInt32Array(34, 160, 161), PackedInt32Array(161, 160, 162), PackedInt32Array(161, 163, 34), PackedInt32Array(167, 166, 164), PackedInt32Array(164, 166, 165), PackedInt32Array(171, 170, 168), PackedInt32Array(168, 170, 169), PackedInt32Array(42, 43, 172), PackedInt32Array(171, 168, 173), PackedInt32Array(171, 173, 172), PackedInt32Array(172, 173, 175), PackedInt32Array(172, 175, 42), PackedInt32Array(42, 175, 174), PackedInt32Array(174, 175, 176), PackedInt32Array(177, 176, 178), PackedInt32Array(179, 162, 177), PackedInt32Array(177, 162, 176), PackedInt32Array(176, 162, 160), PackedInt32Array(176, 160, 174), PackedInt32Array(182, 181, 180), PackedInt32Array(184, 183, 185), PackedInt32Array(185, 183, 186), PackedInt32Array(187, 182, 186), PackedInt32Array(186, 183, 187), PackedInt32Array(182, 180, 186), PackedInt32Array(190, 189, 188), PackedInt32Array(193, 192, 191), PackedInt32Array(197, 196, 194), PackedInt32Array(194, 196, 195), PackedInt32Array(201, 200, 198), PackedInt32Array(198, 200, 199), PackedInt32Array(202, 206, 203), PackedInt32Array(203, 206, 204), PackedInt32Array(204, 206, 205), PackedInt32Array(57, 208, 207), PackedInt32Array(155, 153, 208), PackedInt32Array(208, 153, 207), PackedInt32Array(209, 56, 210), PackedInt32Array(210, 56, 211), PackedInt32Array(211, 56, 207), PackedInt32Array(207, 56, 57), PackedInt32Array(206, 210, 205), PackedInt32Array(205, 210, 211), PackedInt32Array(215, 214, 212), PackedInt32Array(212, 214, 213), PackedInt32Array(218, 217, 216), PackedInt32Array(39, 218, 38), PackedInt32Array(38, 218, 219), PackedInt32Array(216, 209, 210), PackedInt32Array(218, 216, 219), PackedInt32Array(219, 216, 210), PackedInt32Array(219, 210, 220), PackedInt32Array(224, 223, 221), PackedInt32Array(221, 223, 222), PackedInt32Array(228, 227, 225), PackedInt32Array(225, 227, 226), PackedInt32Array(231, 230, 229), PackedInt32Array(202, 203, 220), PackedInt32Array(220, 203, 232), PackedInt32Array(233, 219, 220), PackedInt32Array(229, 234, 231), PackedInt32Array(231, 234, 233), PackedInt32Array(231, 233, 232), PackedInt32Array(232, 233, 220), PackedInt32Array(169, 170, 234), PackedInt32Array(234, 170, 233), PackedInt32Array(237, 236, 235), PackedInt32Array(235, 238, 237), PackedInt32Array(237, 238, 239), PackedInt32Array(242, 241, 240), PackedInt32Array(244, 243, 245), PackedInt32Array(245, 243, 246), PackedInt32Array(248, 247, 240), PackedInt32Array(240, 247, 242), PackedInt32Array(245, 246, 249), PackedInt32Array(249, 246, 250), PackedInt32Array(248, 251, 247), PackedInt32Array(249, 250, 251), PackedInt32Array(251, 250, 247), PackedInt32Array(252, 255, 253), PackedInt32Array(253, 255, 254), PackedInt32Array(256, 259, 257), PackedInt32Array(257, 259, 258), PackedInt32Array(261, 260, 262), PackedInt32Array(262, 260, 263), PackedInt32Array(263, 260, 264), PackedInt32Array(267, 266, 265), PackedInt32Array(268, 267, 269), PackedInt32Array(269, 267, 265), PackedInt32Array(266, 263, 264), PackedInt32Array(265, 266, 264), PackedInt32Array(271, 270, 272), PackedInt32Array(272, 270, 151), PackedInt32Array(273, 154, 151), PackedInt32Array(270, 274, 151), PackedInt32Array(151, 274, 273), PackedInt32Array(273, 274, 275), PackedInt32Array(277, 276, 278), PackedInt32Array(278, 276, 279), PackedInt32Array(281, 280, 282), PackedInt32Array(282, 280, 283), PackedInt32Array(287, 286, 284), PackedInt32Array(284, 286, 285), PackedInt32Array(290, 289, 288), PackedInt32Array(292, 290, 291), PackedInt32Array(291, 290, 288), PackedInt32Array(293, 297, 294), PackedInt32Array(294, 297, 296), PackedInt32Array(294, 296, 295), PackedInt32Array(299, 298, 300), PackedInt32Array(300, 298, 275), PackedInt32Array(300, 275, 302), PackedInt32Array(300, 302, 301), PackedInt32Array(302, 275, 274), PackedInt32Array(297, 293, 303), PackedInt32Array(297, 303, 299), PackedInt32Array(299, 303, 211), PackedInt32Array(299, 211, 298), PackedInt32Array(298, 211, 207), PackedInt32Array(304, 300, 305), PackedInt32Array(305, 300, 301), PackedInt32Array(305, 301, 307), PackedInt32Array(305, 307, 306), PackedInt32Array(311, 310, 308), PackedInt32Array(308, 310, 309), PackedInt32Array(315, 314, 312), PackedInt32Array(312, 314, 313), PackedInt32Array(179, 177, 316), PackedInt32Array(316, 177, 317), PackedInt32Array(320, 319, 318), PackedInt32Array(322, 321, 320), PackedInt32Array(325, 324, 323), PackedInt32Array(322, 320, 323), PackedInt32Array(323, 320, 318), PackedInt32Array(323, 318, 325), PackedInt32Array(327, 326, 328), PackedInt32Array(328, 326, 329), PackedInt32Array(232, 330, 231), PackedInt32Array(231, 330, 331), PackedInt32Array(318, 319, 332), PackedInt32Array(334, 333, 332), PackedInt32Array(332, 333, 331), PackedInt32Array(337, 336, 335), PackedInt32Array(337, 335, 330), PackedInt32Array(330, 335, 331), PackedInt32Array(331, 335, 332), PackedInt32Array(332, 335, 318), PackedInt32Array(333, 334, 317), PackedInt32Array(317, 334, 338), PackedInt32Array(338, 321, 317), PackedInt32Array(317, 321, 316), PackedInt32Array(316, 321, 322), PackedInt32Array(340, 339, 343), PackedInt32Array(343, 339, 341), PackedInt32Array(341, 339, 342), PackedInt32Array(204, 344, 336), PackedInt32Array(336, 344, 342), PackedInt32Array(336, 342, 335), PackedInt32Array(339, 304, 305), PackedInt32Array(339, 305, 342), PackedInt32Array(342, 305, 335), PackedInt32Array(204, 205, 344), PackedInt32Array(346, 345, 347), PackedInt32Array(347, 345, 348), PackedInt32Array(350, 349, 345), PackedInt32Array(345, 349, 351), PackedInt32Array(345, 351, 348), PackedInt32Array(353, 352, 354), PackedInt32Array(354, 352, 355), PackedInt32Array(358, 357, 356), PackedInt32Array(356, 357, 354), PackedInt32Array(356, 354, 355), PackedInt32Array(362, 361, 359), PackedInt32Array(359, 361, 360), PackedInt32Array(366, 365, 363), PackedInt32Array(363, 365, 364), PackedInt32Array(370, 369, 367), PackedInt32Array(367, 369, 368), PackedInt32Array(306, 307, 371), PackedInt32Array(371, 271, 272), PackedInt32Array(306, 371, 372), PackedInt32Array(372, 371, 272), PackedInt32Array(376, 375, 373), PackedInt32Array(373, 375, 374), PackedInt32Array(378, 377, 379), PackedInt32Array(379, 377, 381), PackedInt32Array(379, 381, 380), PackedInt32Array(384, 383, 382)]
cell_size = 1.0
cell_height = 0.1
border_size = 1.0
agent_height = 0.5

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_h2yge"]
albedo_color = Color(0.603922, 0.721569, 0, 1)

[sub_resource type="ConcavePolygonShape3D" id="ConcavePolygonShape3D_lquwl"]
data = PackedVector3Array(-23.3085, 0, 67.3544, -26.4705, 0, 59.6965, -28.3594, 0, 58.606, -26.4705, 0, 59.6965, -23.3085, 0, 67.3544, -18.2575, 0, 64.4383, -28.3594, 0, 58.606, -23.3085, 8.74848, 67.3544, -23.3085, 0, 67.3544, -23.3085, 8.74848, 67.3544, -21.3392, 5.33769, 66.2175, -23.3085, 0, 67.3544, -19.2822, 0, 52.3282, -19.2822, 1.55436, 52.3282, -21.9744, 0, 53.8825, -21.9744, 0, 53.8825, -19.4879, 0, 55.3181, -19.2822, 0, 52.3282, -19.2822, 1.55436, 52.3282, -19.2822, 0, 52.3282, -17.6128, 0.590522, 55.2197, -16.59, 0, 56.9912, -19.2822, 0, 52.3282, -19.4879, 0, 55.3181, -16.59, 0, 56.9912, -17.6128, 0.590522, 55.2197, -19.2822, 0, 52.3282, -18.2575, 0, 64.4383, -23.3085, 0, 67.3544, -21.3392, 5.33769, 66.2175, -21.3392, 5.33769, 66.2175, -28.3594, 0, 58.606, -26.4705, 0, 59.6965, -28.3594, 0, 58.606, -21.3392, 5.33769, 66.2175, -23.3085, 8.74848, 67.3544, -19.2822, 1.55436, 52.3282, -19.4879, 0, 55.3181, -21.9744, 0, 53.8825, -19.4879, 0, 55.3181, -19.2822, 1.55436, 52.3282, -17.6128, 0.590522, 55.2197, -17.6128, 0.590522, 55.2197, -16.59, 0, 56.9912, -19.4879, 0, 55.3181, -26.4705, 0, 59.6965, -18.2575, 0, 64.4383, -21.3392, 5.33769, 66.2175)

[sub_resource type="ArrayMesh" id="ArrayMesh_7mycd"]
_surfaces = [{
"aabb": AABB(-28.3594, 0, 52.3282, 11.7694, 8.74848, 15.0263),
"attribute_data": PackedByteArray("AAAAAAAAgD+wCss9PbmBPgAAAABAN6c9sArLPT25gT4AAAAAAACAP+G7Bz8AAIA/GBlrPwAAgD8AAAAA0ycAPgAAAAAAAIA/0ycAPgAAAADbte4+/6xTPgAAgD8AAAAAAACAPwAAAABYNVg/AAAAAAAAgD9hspA+0KY3PwAAAACyD1k/FnhnPgAAgD8AAAAAAACAP6AqHz4AAIA/AAAAANxLMj/A4HE9AACAPz6f+j4AAIA/AAAAALIPWT8WeGc+YbACPwAAAADcSzI/wOBxPQAAgD8AAAAAAACAP+G7Bz8AAIA/AAAAANu17j7/rFM+fT3GPn09xj49p2E/LLxFPyy8RT8svEU/PadhPyy8RT99PcY+fT3GPnpY4z59axA+gLMgP+iUtT6XStc+l0rXPpVK1z5Ayo0+l0rXPpdK1z6AsyA/6JS1Pria/z64mv8+uJr/Pria/z6ZStc+bXoWP5dK1z6XStc+LLxFPyy8RT8ksZg+KrxFP309xj59PcY+"),
"format": 34359738391,
"primitive": 3,
"uv_scale": Vector4(0, 0, 0, 0),
"vertex_count": 48,
"vertex_data": PackedByteArray("v3e6wQAAAAB6tYZCmMPTwQAAAAA9yW5CD+DiwQAAAACCbGpCmMPTwQAAAAA9yW5Cv3e6wQAAAAB6tYZCbQ+SwQAAAABn4IBCD+DiwQAAAACCbGpCv3e6wcf5C0F6tYZCv3e6wQAAAAB6tYZCv3e6wcf5C0F6tYZCx7aqwVfOqkBeb4RCv3e6wQAAAAB6tYZC6UGawQAAAAAJUFFC6UGawUj1xj8JUFFCmsuvwQAAAACzh1dCmsuvwQAAAACzh1dCR+ebwQAAAAC6RV1C6UGawQAAAAAJUFFC6UGawUj1xj8JUFFC6UGawQAAAAAJUFFC8+aMwXgsFz/y4FxCOriEwQAAAAAH92NC6UGawQAAAAAJUFFCR+ebwQAAAAC6RV1COriEwQAAAAAH92NC8+aMwXgsFz/y4FxC6UGawQAAAAAJUFFCbQ+SwQAAAABn4IBCv3e6wQAAAAB6tYZCx7aqwVfOqkBeb4RCx7aqwVfOqkBeb4RCD+DiwQAAAACCbGpCmMPTwQAAAAA9yW5CD+DiwQAAAACCbGpCx7aqwVfOqkBeb4RCv3e6wcf5C0F6tYZC6UGawUj1xj8JUFFCR+ebwQAAAAC6RV1CmsuvwQAAAACzh1dCR+ebwQAAAAC6RV1C6UGawUj1xj8JUFFC8+aMwXgsFz/y4FxC8+aMwXgsFz/y4FxCOriEwQAAAAAH92NCR+ebwQAAAAC6RV1CmMPTwQAAAAA9yW5CbQ+SwQAAAABn4IBCx7aqwVfOqkBeb4RC/38AAP//kij/fwAA//+SKP9/AAD//5Io/38AAP//kij/fwAA//+SKP9/AAD//5Io2S7/fwAAbBfZLv9/AABsF9ku/38AAGwX2a7/f/9//n/Zrv9//3/+f9mu/3//f/5/AAAl0f9//n8AACXR/3/+fwAAJdH/f/5//38AAP//kij/fwAA//+SKP9/AAD//5Io///ZrgAAbBf//9muAABsF///2a4AAGwX/38AAP//kij/fwAA//+SKP9/AAD//5Io/v/ZrgAAkmj+/9muAACSaP7/2a4AAJJo2a7/f/9//n/Zrv9//3/+f9mu/3//f/5/+NkQ3wAAkqj42RDfAACSqPjZEN8AAJKo+NkQ3wAAbNf42RDfAABs1/jZEN8AAGzXV2uOx/jZh+9Xa47H+NmH71drjsf42YfvV2uOx/jZh+9Xa47H+NmH71drjsf42YfvV2uOx/jZh+9Xa47H+NmH71drjsf42Yfv+NkQ3wAAbNf42RDfAABs1/jZEN8AAGzX")
}]

[node name="Node3D" type="Node3D"]

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_272bh")

[node name="GameManager" type="Node" parent="."]
script = ExtResource("1_kry3j")

[node name="SpringArm3D" parent="." node_paths=PackedStringArray("target") instance=ExtResource("2_21xkr")]
transform = Transform3D(1, 0, 0, 0, 0.766044, 0.642787, 0, -0.642787, 0.766044, 0, 0, 0)
target = NodePath("../Player")
speed = 10.0

[node name="Player" parent="." instance=ExtResource("3_6bp64")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 5.51987, 0)
Speed = 30.0

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 0.258819, 0.965926, 0, -0.965926, 0.258819, 0, 14, 0)
light_color = Color(0.988284, 0.890326, 0.590457, 1)
shadow_enabled = true

[node name="DirectionalLight3D2" type="DirectionalLight3D" parent="."]
transform = Transform3D(-0.700611, -0.192894, -0.686977, 0.711516, -0.116331, -0.692973, 0.0537534, -0.974299, 0.21875, 0, 14, 18)
light_color = Color(0.593285, 0.757485, 0.840068, 1)

[node name="Control" parent="." instance=ExtResource("4_344ge")]

[node name="MovingEntity" parent="." instance=ExtResource("5_ynf5e")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2, -16)

[node name="MovingEntity2" parent="." instance=ExtResource("5_ynf5e")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 14, 2, 22)

[node name="MovingEntity3" parent="." instance=ExtResource("5_ynf5e")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -45, 2, 16)

[node name="MovingEntity4" parent="." instance=ExtResource("5_ynf5e")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -33, 2, -13)

[node name="MovingEntity5" parent="." instance=ExtResource("5_ynf5e")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -75, 2, 29)

[node name="MovingEntity6" parent="." instance=ExtResource("5_ynf5e")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -45, 2, 54)

[node name="MovingEntity7" parent="." instance=ExtResource("5_ynf5e")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 33, 2, 58)

[node name="MovingEntity8" parent="." instance=ExtResource("5_ynf5e")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 58, 2, -11)

[node name="MovingEntity9" parent="." instance=ExtResource("5_ynf5e")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 18, 2, -53)

[node name="MovingEntity10" parent="." instance=ExtResource("5_ynf5e")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -40, 2, -70)

[node name="MovingEntity11" parent="." instance=ExtResource("5_ynf5e")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -85, 2, -48)

[node name="MovingEntity12" parent="." instance=ExtResource("5_ynf5e")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -116, 2, -17)

[node name="NavigationRegion3D" type="NavigationRegion3D" parent="."]
navigation_mesh = SubResource("NavigationMesh_lquwl")

[node name="Floor" type="CSGBox3D" parent="NavigationRegion3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -7.5, 0, 9.5)
material_override = SubResource("StandardMaterial3D_h2yge")
use_collision = true
collision_layer = 129
collision_mask = 129
size = Vector3(409, 1, 231)

[node name="Obstacles" type="Node3D" parent="NavigationRegion3D"]

[node name="CSGBox3D2" type="CSGBox3D" parent="NavigationRegion3D/Obstacles" groups=["Obstacle"]]
transform = Transform3D(-4.37114e-08, 0, 1, 0, 1, 0, -1, 0, -4.37114e-08, -9, 3.5, -93.5)
layers = 3
use_collision = true
collision_layer = 3
collision_mask = 3
size = Vector3(4, 6, 393)

[node name="CSGBox3D4" type="CSGBox3D" parent="NavigationRegion3D/Obstacles" groups=["Obstacle"]]
transform = Transform3D(-4.37114e-08, 0, 1, 0, 1, 0, -1, 0, -4.37114e-08, -9, 3.5, 114.5)
layers = 3
use_collision = true
collision_layer = 3
collision_mask = 3
size = Vector3(4, 6, 393)

[node name="CSGBox3D5" type="CSGBox3D" parent="NavigationRegion3D/Obstacles" groups=["Obstacle"]]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 188, 3.5, 13)
layers = 3
use_collision = true
collision_layer = 3
collision_mask = 3
size = Vector3(4, 6, 214)

[node name="CSGBox3D6" type="CSGBox3D" parent="NavigationRegion3D/Obstacles" groups=["Obstacle"]]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -204, 3.5, 13)
layers = 3
use_collision = true
collision_layer = 3
collision_mask = 3
size = Vector3(4, 6, 214)

[node name="CSGBox3D3" type="CSGBox3D" parent="NavigationRegion3D/Obstacles" groups=["Obstacle"]]
transform = Transform3D(0.707107, 0, -0.707107, 0, 1, 0, 0.707107, 0, 0.707107, 73.5707, 5, 23.3413)
layers = 3
use_collision = true
collision_layer = 3
collision_mask = 3
size = Vector3(11, 10, 13)

[node name="CSGBox3D20" type="CSGBox3D" parent="NavigationRegion3D/Obstacles" groups=["Obstacle"]]
transform = Transform3D(0.5, 0, -0.866026, 0, 1, 0, 0.866026, 0, 0.5, -182.901, 5, 33.8536)
layers = 3
use_collision = true
collision_layer = 3
collision_mask = 3
size = Vector3(32, 10, 20)

[node name="Node3D4" type="StaticBody3D" parent="NavigationRegion3D/Obstacles"]

[node name="CSGBakedCollisionShape3D" type="CollisionShape3D" parent="NavigationRegion3D/Obstacles/Node3D4"]
shape = SubResource("ConcavePolygonShape3D_lquwl")

[node name="CSGBakedMeshInstance3D" type="MeshInstance3D" parent="NavigationRegion3D/Obstacles/Node3D4"]
mesh = SubResource("ArrayMesh_7mycd")
skeleton = NodePath("../../root/@EditorNode@21394/@Panel@14/@VBoxContainer@15/DockHSplitLeftL/DockHSplitLeftR/DockHSplitMain/@VBoxContainer@26/DockVSplitCenter/@VSplitContainer@54/@VBoxContainer@55/@EditorMainScreen@102/MainScreen/@CanvasItemEditor@11634/@VSplitContainer@11286/@HSplitContainer@11288/@HSplitContainer@11290/@Control@11291/@SubViewportContainer@11292/@SubViewport@11293/Node3D/Obstacles")

[node name="CSGBox3D21" type="CSGBox3D" parent="NavigationRegion3D/Obstacles" groups=["Obstacle"]]
transform = Transform3D(0.5, 0, -0.866026, 0, 1, 0, 0.866026, 0, 0.5, -181.535, 8.5, 34.2196)
layers = 3
use_collision = true
collision_layer = 3
collision_mask = 3
size = Vector3(18, 17, 12)

[node name="CSGBox3D14" type="CSGBox3D" parent="NavigationRegion3D/Obstacles" groups=["Obstacle"]]
transform = Transform3D(0, 0, -1, 0, 1, 0, 1, 0, 0, 76.5707, 5, -32.6587)
layers = 3
use_collision = true
collision_layer = 3
collision_mask = 3
size = Vector3(11, 10, 13)

[node name="CSGBox3D15" type="CSGBox3D" parent="NavigationRegion3D/Obstacles" groups=["Obstacle"]]
transform = Transform3D(0, 0, -1, 0, 1, 0, 1, 0, 0, -144.429, 5, -54.6587)
layers = 3
use_collision = true
collision_layer = 3
collision_mask = 3
size = Vector3(11, 10, 13)

[node name="CSGBox3D16" type="CSGBox3D" parent="NavigationRegion3D/Obstacles" groups=["Obstacle"]]
transform = Transform3D(0, 0, -1, 0, 1, 0, 1, 0, 0, -79.4293, 5, -11.6587)
layers = 3
use_collision = true
collision_layer = 3
collision_mask = 3
size = Vector3(11, 10, 13)

[node name="CSGBox3D17" type="CSGBox3D" parent="NavigationRegion3D/Obstacles" groups=["Obstacle"]]
transform = Transform3D(0, 0, -1, 0, 1, 0, 1, 0, 0, -124.429, 5, 78.3413)
layers = 3
use_collision = true
collision_layer = 3
collision_mask = 3
size = Vector3(11, 10, 13)

[node name="CSGBox3D18" type="CSGBox3D" parent="NavigationRegion3D/Obstacles" groups=["Obstacle"]]
transform = Transform3D(0, 0, -1, 0, 1, 0, 1, 0, 0, 142.571, 5, 83.3413)
layers = 3
use_collision = true
collision_layer = 3
collision_mask = 3
size = Vector3(11, 10, 13)

[node name="CSGBox3D19" type="CSGBox3D" parent="NavigationRegion3D/Obstacles" groups=["Obstacle"]]
transform = Transform3D(0, 0, -1, 0, 1, 0, 1, 0, 0, 153.571, 5, -45.6587)
layers = 3
use_collision = true
collision_layer = 3
collision_mask = 3
size = Vector3(11, 10, 13)

[node name="Node3D" type="Node3D" parent="NavigationRegion3D/Obstacles"]
transform = Transform3D(0.707107, 0, -0.707107, 0, 1, 0, 0.707107, 0, 0.707107, 52, -10, 68)

[node name="CSGBox3D7" type="CSGBox3D" parent="NavigationRegion3D/Obstacles/Node3D" groups=["Obstacle"]]
transform = Transform3D(-0.258819, 0, -0.965926, 0, 1, 0, 0.965926, 0, -0.258819, -5.49, 5, 24.402)
layers = 3
use_collision = true
collision_layer = 3
collision_mask = 3
size = Vector3(21, 16, 16)

[node name="CSGBox3D8" type="CSGBox3D" parent="NavigationRegion3D/Obstacles/Node3D" groups=["Obstacle"]]
transform = Transform3D(-0.482963, -0.258819, -0.836517, -0.12941, 0.965926, -0.224144, 0.866026, 0, -0.5, 6.82218, 5, 21.469)
layers = 3
use_collision = true
collision_layer = 3
collision_mask = 3
size = Vector3(16, 10, 14)

[node name="CSGBox3D9" type="CSGBox3D" parent="NavigationRegion3D/Obstacles/Node3D" groups=["Obstacle"]]
transform = Transform3D(-0.0870967, -0.836516, -0.540976, -0.933013, 0.258819, -0.25, 0.349144, 0.482963, -0.803023, 4.60328, 11, 25.92)
layers = 3
use_collision = true
collision_layer = 3
collision_mask = 3
size = Vector3(7, 10, 5)

[node name="Node3D3" type="Node3D" parent="NavigationRegion3D/Obstacles"]
transform = Transform3D(-0.638405, 0, 0.7697, 0, 1, 0, -0.7697, 0, -0.638405, 105, 0, -46.4983)

[node name="CSGBox3D7" type="CSGBox3D" parent="NavigationRegion3D/Obstacles/Node3D3" groups=["Obstacle"]]
transform = Transform3D(-0.258819, 0, -0.965926, 0, 1, 0, 0.965926, 0, -0.258819, -5.49, 5, 24.402)
layers = 3
use_collision = true
collision_layer = 3
collision_mask = 3
size = Vector3(21, 16, 16)

[node name="CSGBox3D8" type="CSGBox3D" parent="NavigationRegion3D/Obstacles/Node3D3" groups=["Obstacle"]]
transform = Transform3D(-0.482963, -0.258819, -0.836517, -0.12941, 0.965926, -0.224144, 0.866026, 0, -0.5, 6.82218, 5, 21.469)
layers = 3
use_collision = true
collision_layer = 3
collision_mask = 3
size = Vector3(16, 10, 14)

[node name="CSGBox3D9" type="CSGBox3D" parent="NavigationRegion3D/Obstacles/Node3D3" groups=["Obstacle"]]
transform = Transform3D(-0.5, 0, -0.866026, 0, 1, 0, 0.866026, 0, -0.5, 0.822182, 1, 25.469)
layers = 3
use_collision = true
collision_layer = 3
collision_mask = 3
size = Vector3(16, 10, 14)

[node name="Node3D2" type="Node3D" parent="NavigationRegion3D/Obstacles"]
transform = Transform3D(0.683013, -0.258819, 0.683013, 0.183013, 0.965926, 0.183013, -0.707107, 0, 0.707107, -123, -8, 11)

[node name="CSGBox3D7" type="CSGBox3D" parent="NavigationRegion3D/Obstacles/Node3D2" groups=["Obstacle"]]
transform = Transform3D(-0.258819, 0, -0.965926, 0, 1, 0, 0.965926, 0, -0.258819, -5.49, 5, 24.402)
layers = 3
use_collision = true
collision_layer = 3
collision_mask = 3
size = Vector3(21, 16, 16)

[node name="CSGBox3D8" type="CSGBox3D" parent="NavigationRegion3D/Obstacles/Node3D2" groups=["Obstacle"]]
transform = Transform3D(-0.482963, -0.258819, -0.836517, -0.12941, 0.965926, -0.224144, 0.866026, 0, -0.5, 6.82218, 5, 21.469)
layers = 3
use_collision = true
collision_layer = 3
collision_mask = 3
size = Vector3(16, 10, 14)

[node name="CSGBox3D9" type="CSGBox3D" parent="NavigationRegion3D/Obstacles/Node3D2" groups=["Obstacle"]]
transform = Transform3D(-0.5, 0, -0.866026, 0, 1, 0, 0.866026, 0, -0.5, 0.822182, 1, 25.469)
layers = 3
use_collision = true
collision_layer = 3
collision_mask = 3
size = Vector3(16, 10, 14)

[node name="CSGBox3D10" type="CSGBox3D" parent="NavigationRegion3D/Obstacles" groups=["Obstacle"]]
transform = Transform3D(0.298809, -0.851271, -0.431336, -0.677077, 0.129409, -0.724445, 0.672518, 0.508519, -0.537707, -50.0123, -2.29679, -34.7543)
layers = 3
use_collision = true
collision_layer = 3
collision_mask = 3
size = Vector3(21, 16, 16)

[node name="CSGBox3D11" type="CSGBox3D" parent="NavigationRegion3D/Obstacles" groups=["Obstacle"]]
transform = Transform3D(0.686832, -0.242362, -0.685217, -0.677077, 0.129409, -0.724445, 0.264252, 0.961516, -0.0752156, -49.2792, 10.2533, -36.2208)
layers = 3
use_collision = true
collision_layer = 3
collision_mask = 3
size = Vector3(16, 10, 14)

[node name="CSGBox3D12" type="CSGBox3D" parent="NavigationRegion3D/Obstacles" groups=["Obstacle"]]
transform = Transform3D(0.899519, -0.433013, 0.0580127, -0.0580127, -0.25, -0.966506, 0.433013, 0.866025, -0.25, -40.5542, -0.956488, -37.6849)
layers = 3
use_collision = true
collision_layer = 3
collision_mask = 3
size = Vector3(16, 10, 14)
